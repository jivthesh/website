<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on Rust AV</title><link>https://rustav.org/blog/</link><description>Recent content in Blogs on Rust AV</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 30 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://rustav.org/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Integration of AV-Metrics into rav1e, the AV1 Encoder</title><link>https://rustav.org/blog/2020-03-30-rav1e-and-av-metrics/</link><pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate><guid>https://rustav.org/blog/2020-03-30-rav1e-and-av-metrics/</guid><description>Hi,
Hope all are doing well, in this COVID-19 Outbreak and the lockdown, let us take a minute sometime to pray for the people who did pass away and who are under diagnosis with Corona,
So, this blog post aims to provide some technical overview of how introduction of v-frame, migration to v-frames for av-metrics and also integration of av-metrics into rav1e will help for rapid analysis. Rapid analysis like measurement of encoder’s complexity with metrics like PSNR, SSIM, A-PSNR, PSNR-HVS, MS-SSIM, CIEDE2000 etc.</description></item><item><title>rav1e 0.2.0 - Winter Solstice</title><link>https://rustav.org/blog/2019-12-19-rav1e-0.2.0/</link><pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate><guid>https://rustav.org/blog/2019-12-19-rav1e-0.2.0/</guid><description>Yesterday we made the second release of rav1e.
Winter Solstice Saturnalia Yuletide The second official release of rav1e was focused mainly on speed. Later I&amp;rsquo;ll write down what we used and what, in my opinion, are the best practices when you have to optimize a codebase like this one.
What&amp;rsquo;s new Since we focused mainly on speed, there aren&amp;rsquo;t many user-facing changes.
New in the command line --benchmark: Since I started to use gnu time to get some coarse information, I decided to add a getrusage() report directly in the cli.</description></item><item><title>rav1e and gains on ARM Devices</title><link>https://rustav.org/blog/2019-11-29-rav1e-and-gains-on-arm-devices/</link><pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate><guid>https://rustav.org/blog/2019-11-29-rav1e-and-gains-on-arm-devices/</guid><description>Hi,
It&amp;rsquo;s been a while I have written a blog about the work I am doing lately. So yeah, I have been working on rav1e, the AV1 Encoder written in rust as part of Project Iris. Currently, if we see, there are other Open-Source Encoders available like libaom from Google, SVT-AV1 from Intel and Netflix. Rav1e’s memory footprint makes it a good starting point for new-cases like Software Encoding in ARM devices, Real-time streaming, while libaom and SVT-AV1 are either too slow or resource-intensive.</description></item><item><title>rav1e 0.1.0 - Made in Tokyo</title><link>https://rustav.org/blog/2019-11-20-rav1e-0.1.0/</link><pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate><guid>https://rustav.org/blog/2019-11-20-rav1e-0.1.0/</guid><description>Intro AV1 is a modern video codec brought to you by an alliance of many different bigger and smaller players in the multimedia field. I&amp;rsquo;m part of the VideoLan organization and I spent quite a bit of time on this codec lately.
rav1e: The safest and fastest AV1 encoder, built by many volunteers and Mozilla/Xiph developers. It is written in rust and strives to provide good speed, quality and stay maintainable.</description></item><item><title>Using rav1e - from your own code</title><link>https://rustav.org/blog/2019-04-09-using-rav1e-from-your-code/</link><pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate><guid>https://rustav.org/blog/2019-04-09-using-rav1e-from-your-code/</guid><description>AV1, Rav1e, Crav1e, an intro AV1 is a modern video codec brought to you by an alliance of many different bigger and smaller players in the multimedia field. I&amp;rsquo;m part of the VideoLAN organization and I spent quite a bit of time on this codec lately.
rav1e: The safest and fastest AV1 encoder, built by many volunteers and Mozilla/Xiph developers. It is written in rust and strives to provide good speed, quality and stay maintainable.</description></item><item><title>Rust-av: Rust and Multimedia</title><link>https://rustav.org/blog/2018-02-18-rust-av-and-multimedia/</link><pubDate>Sun, 18 Feb 2018 00:00:00 +0000</pubDate><guid>https://rustav.org/blog/2018-02-18-rust-av-and-multimedia/</guid><description>Rust-av: Rust and Multimedia Recently I presented my new project at Fosdem and since I was afraid of not having enough time for the questions I trimmed the content to the bare minimum. This blog post should add some more details.
What is it? Rust-av aims to be a complete multimedia toolkit written in rust.
Rust is a quite promising language that aims to offer high execution speed while granting a number of warranties on the code behavior that you cannot have in C, C++, Java and so on.</description></item></channel></rss>